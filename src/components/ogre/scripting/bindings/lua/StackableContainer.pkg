//
// C++ Interface: StackableContainer
//
// Description: 
//
//
// Author: Erik Hjortsberg <erik.hjortsberg@gmail.com>, (C) 2007
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.//
//

#include <CEGUI/CEGUI.h>

namespace Ember {
namespace OgreView {

namespace Gui {

/**
	@author Erik Hjortsberg <erik.hjortsberg@gmail.com>
*/
class StackableContainer{
public:
	enum FlowDirection {
		Horizontal = 0,
		Vertical = 1
	};

    StackableContainer(CEGUI::Window* window);

    virtual ~StackableContainer();
	
	void setInnerContainerWindow(CEGUI::Window* window);
	
	CEGUI::Window* getWindow();
	
	/**
	Sets how much to pad between each child, in pixels.
	*/
	void setPadding(int padding);
	/**
	Gets how much to pad between each child, in pixels.
	*/
	int getPadding() const;

	float getAbsoluteHeight();
	float getAbsoluteWidth();
	
	void setFlowDirection(StackableContainer::FlowDirection flowDirection);
	StackableContainer::FlowDirection getFlowDirection() const;

	/**
	Repositions all windows as they are added and removed to the list.
	*/
	void repositionWindows();

	/**
	Disconnects the listener, in effect deactivating the instance.
	*/
	void disconnect();

};

}
}
}