
namespace Ember {
namespace OgreView {
namespace Gui {

/**
Use this class as base for more advanced buttons where you want a "roll over" effect.

@author Erik Hjortsberg
*/
class IconBase{

    /**
     * Default constructor.
     * @param name the name of the icon
     * @param background the image for the background, will always be shown
     * @param foreground the image for the foreground, will always be shown
     * @param borderInactive the image for the border when active (i.e. rolled over). Will only be active when rolled over.
     * @param borderActive the image for the border when inactive (i.e. not rolled over). Will only be active when not rolled over.
     * @return 
     */
    IconBase(const std::string& name, const CEGUI::Image* background, const CEGUI::Image* foreground, const CEGUI::Image* borderInactive, const CEGUI::Image* borderActive);

    /**
     * Default constructor.
     * @param name the name of the icon
     * @param background the image for the background, will always be shown
     * @param foreground the image for the foreground, will always be shown
     * @param borderInactive the image for the border when active (i.e. rolled over). Will only be active when rolled over.
     * @param borderActive the image for the border when inactive (i.e. not rolled over). Will only be active when not rolled over.
     * @param size The size of the icon. Defaults to 48x48px.
     * @return 
     */
    IconBase(const std::string& name, const CEGUI::Image* background, const CEGUI::Image* foreground, const CEGUI::Image* borderInactive, const CEGUI::Image* borderActive, CEGUI::USize size);


    ~IconBase();
    
    /**
     * Returns a pointer to the container which holds the button. If you want to attach to event etc. use this one.
     * @return 
     */
    CEGUI::Window* getContainer();
 	CEGUI::PushButton* getButton();
 	
 	void setForeground(const CEGUI::Image* image);
   
    static const CEGUI::Image* loadImageFromImageset(const std::string& imagesetName, const std::string& image);

};
}
}

}
